openapi: 3.0.0
info:
  title: Jobs_API
  contact: {}
  version: '1.0'
servers:
- url: http://localhost:8080/api/v1
  variables: {}
paths:
  /user/register:
    post:
      tags:
      - User
      summary: Register
      operationId: Register
      parameters: []
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RegisterRequest'
            example:
              name: abdighaniMD
              email: abz15@abdighaniMD.com
              userName: ABZ1
              password: LOVEWithLove
        required: true
      responses:
        '200':
          description: ''
          headers: {}
      deprecated: false
      security: []
  /user/login:
    post:
      tags:
      - User
      summary: login
      operationId: login
      parameters: []
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/loginrequest'
            example:
              userName: ABZ1
              password: LOVEWithLove
        required: true
      responses:
        '200':
          description: ''
          headers: {}
      deprecated: false
      security: []
  /jobsListing:
    get:
      tags:
      - Jobs Listing
      summary: Get All Jobs Listing
      operationId: GetAllJobsListing
      parameters: []
      responses:
        '200':
          description: ''
          headers: {}
      deprecated: false
      security:
      - bearer: []
    post:
      tags:
      - Jobs Listing
      summary: Create  Jobs Listing
      operationId: CreateJobsListing
      parameters: []
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateJobsListingRequest'
            example:
              company: SomeCompany
              position: IT
              status: interview
        required: true
      responses:
        '200':
          description: ''
          headers: {}
      deprecated: false
      security:
      - bearer: []
  /jobsListing/{id}:
    parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
        description: the job id
    get:
      tags:
      - Jobs Listing
      summary: Get Single Jobs Listing
      operationId: GetSingleJobsListing
      parameters: []
      responses:
        '200':
          description: ''
          headers: {}
      deprecated: false
      security:
      - bearer: []
    put:
      tags:
      - Jobs Listing
      summary: Edit Jobs Listing
      operationId: EditJobsListing
      parameters: []
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EditJobsListingRequest'
            example:
              company: SomeCompany
              position: IT
              status: interview
        required: true
      responses:
        '200':
          description: ''
          headers: {}
      deprecated: false
      security:
      - bearer: []

    delete:
      tags:
      - Jobs Listing
      summary: delete Jobs Listing
      operationId: deleteJobsListing
      parameters: []
      responses:
        '200':
          description: ''
          headers: {}
      deprecated: false
      security:
      - bearer: []
components:
  schemas:
    RegisterRequest:
      title: RegisterRequest
      required:
      - name
      - email
      - userName
      - password
      type: object
      properties:
        name:
          type: string
        email:
          type: string
        userName:
          type: string
        password:
          type: string
      example:
        name: abdighaniMD
        email: abz15@abdighaniMD.com
        userName: ABZ1
        password: LOVEWithLove
    loginrequest:
      title: loginrequest
      required:
      - userName
      - password
      type: object
      properties:
        userName:
          type: string
        password:
          type: string
      example:
        userName: ABZ1
        password: LOVEWithLove
    CreateJobsListingRequest:
      title: CreateJobsListingRequest
      required:
      - company
      - position
      - status
      type: object
      properties:
        company:
          type: string
        position:
          type: string
        status:
          type: string
      example:
        company: SomeCompany
        position: IT
        status: interview
    EditJobsListingRequest:
      title: EditJobsListingRequest
      required:
      - company
      - position
      - status
      type: object
      properties:
        company:
          type: string
        position:
          type: string
        status:
          type: string
      example:
        company: SomeCompany
        position: IT
        status: interview
  securitySchemes:
    bearer:
      type: http
      scheme: bearer
security: []
tags:
- name: User
- name: Jobs Listing